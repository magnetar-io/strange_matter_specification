openapi: 3.0.0
info:
  title: Strange Matter Components API
  version: 1.0.0
  description: API for managing Strange Matter Components
paths:
  /collections:
    get:
      summary: Get a list of collections
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/Collection'
    post:
      summary: Create a new collection
      operationId: createCollection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/Collection'
      responses:
        '201':
          description: Collection created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/Collection'
  /collections/{collectionId}:
    parameters:
      - name: collectionId
        in: path
        required: true
        description: ID of the collection to retrieve
        schema:
          type: string
          format: uuid7
    get:
      summary: Get details of a specific collection
      operationId: getCollection
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/Collection'
  /components:
    get:
      summary: Get a list of components
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/ComponentInstance'
    post:
      summary: Create a new component
      operationId: createComponent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/ComponentInstance'
      responses:
        '201':
          description: Component created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/ComponentInstance'
components:
  schemas:
    Collection:
      type: object
      properties:
        name:
          type: string
          description: Name of the collection. (required)
        description:
          type: string
          description: Description of the collection.
    ComponentInstance:
      type: object
      properties:
        collection_id:
          type: string
          format: uuid7
          description: ID of the collection to which this component belongs. (required)
        component_type:
          type: string
          description: The human-readable name for the component. (required)
        component_type_reference:
          type: string
          format: uri
          description: URI of the hosted library for the component. (required)
        component_type_guid:
          type: string
          format: uuid7
          description: The UUID7 id for the component. (required)
        component_type_version_guid:
          type: string
          format: uuid7
          description: UUID7 to identify the version of the component. (required)
        component_version:
          type: string
          description: Semantic version of the component definition used for humans to follow and track. (required)
        component_hash:
          type: string
          description: Hash of the Component Definition as there could be scenarios where different information is added to the component definition. (required)
        author:
          type: string
          description: Name of the author, which can be a person, company, etc. (required)
        author_identifier:
          type: string
          description: Name or Number of the scope that this data refers to. (required)
        context:
          type: string
          description: Domain/source from which the instance data originated. (required)
        source_data:
          type: string
          format: uri
          description: URL or URI for the data source for this component. (required)
        source_data_file_date:
          type: string
          format: date-time
          description: Creation date of the file, database, etc. (required)
        source_data_file_id:
          type: string
          description: ID for the file or similar container. (required)
        source_data_file_version_id:
          type: string
          description: Version ID for the file or similar container. (required)
        source_data_item_id:
          type: string
          description: ID from the source application of the referenced object. (required)
        source_data_item_version_id:
          type: string
          description: ID for the version from the source application of the referenced object. (required)
        source_data_other:
          type: string
          description: Other values from the source key to identifying the data. (optional)
        entity_guid:
          type: string
          format: uuid7
          description: UUID7 value representing the entity. (required)
        component_guid:
          type: string
          format: uuid7
          description: UUID7 value for the component. (required)
        version:
          type: string
          description: Human-readable semantic version. (required)
        version_guid:
          type: string
          format: uuid7
          description: UUID7 version GUID. (required)
        component_hash:
          type: string
          description: Hash of the component instance header details. (required)
        version_increment:
          type: integer
          description: Used to track modifications when using a version control system. (required)
        date_created:
          type: string
          format: date-time
          description: DateTime of the payload's creation. (required)
        name:
          type: string
          description: User name for the item. (required)
        classification_value:
          type: string
          description: Classification value for the item (up for debate if this is included). (required)
        sequence_name:
          type: string
          description: Name of the sequence if the component is part of one (optional).
        sequence_guid:
          type: string
          format: uuid7
          description: UUID7 for the sequence (optional).
        sequence_value:
          type: integer
          description: Ordered number for the sequence (optional).
        option:
          type: string
          description: Specific option of the data (optional).
        phase:
          type: string
          description: Specific user data phase (optional).
        status:
          type: string
          description: Status of the item (e.g., WIP, Active, Other). (required)
        active:
          type: boolean
          description: Active status (e.g., Yes/No). (required)
        component_responses:
          type: array
          items:
            $ref: '#/components/ComponentInstance'
        payload_hash:
          type: string
          description: Specific hash of the payload data. (required)
        hash_definition:
          type: string
          description: Link or description of the hash. (required)
        payload_data_type:
          type: string
          description: Encoding of the payload. (required)
        payload_data_type_definition:
          type: string
          description: Definition for the payload encoding. (required)
        payload_encoding:
          type: string
          description: Encoding of the payload. (required)
        payload_encryption:
          type: string
          description: Encryption status or type of the payload. (required)
        payload_data:
          type: string
          format: uri
          description: Embedded or URL/URI for the payload data. (required)
      required:
        - collection_id
        - component_type
        - component_type_reference
        - component_type_guid
        - component_type_version_guid
        - component_version
        - component_hash
        - author
        - author_identifier
        - context
        - source_data
        - source_data_file_date
        - source_data_file_id
        - source_data_file_version_id
        - source_data_item_id
        - source_data_item_version_id
        - entity_guid
        - component_guid
        - version
        - version_guid
        - component_hash
        - version_increment
        - date_created
        - name
        - classification_value
        - status
        - active
        - component_responses
        - payload_hash
        - hash_definition
        - payload_data_type
        - payload_data_type_definition
        - payload_encoding
        - payload_encryption
        - payload_data
